var ATMC=ATMC||{};ATMC.SKIN=function(scope){var _initialSetupDone=false;var _list=[];var _masterSVGUrl="AtomicSkins/svg/Master_Monogram.svg";var _ruleBook=undefined;var _baseSkinDoc=undefined;var _baseUrl="https://configservicestoragetest.blob.core.windows.net/livecareerrepository/";var _parser=new DOMParser;scope.allSVGs=scope.allSVGs||[];var _getMainSkinDocXmlNode=function(parser,skinCD){return new Promise(function(resolve,reject){_getAtomicSkinBytes(skinCD).then(mainSkinBytes=>{if(typeof mainSkinBytes==="undefined")return null;try{const mainSkinDoc=parser.parseFromString(mainSkinBytes,"application/xml");let initialMainFormulaNode=mainSkinDoc.querySelector("html>head>formula");if(initialMainFormulaNode==null)initialMainFormulaNode=mainSkinDoc.querySelector("html>head>style");let baseFormulaElements=_baseSkinDoc.querySelectorAll("html>head>formula");if(baseFormulaElements){baseFormulaElements.forEach(baseFormulaElement=>{let name=baseFormulaElement.getAttribute("name");let mainFormulaElement=mainSkinDoc.querySelector("html > head > formula[name='"+name+"']");if(mainFormulaElement==null){let nodeToInsert=mainSkinDoc.importNode(baseFormulaElement,true);if(initialMainFormulaNode){let initialMainHeadNode=mainSkinDoc.querySelector("html>head");initialMainHeadNode.insertBefore(nodeToInsert,initialMainFormulaNode)}}})}let initialMainStyleNode=mainSkinDoc.querySelector("html>head>style");let baseSkinStyleNode=_baseSkinDoc.querySelectorAll("html>head>style");if(baseSkinStyleNode){baseSkinStyleNode.forEach(baseStyleElement=>{let nodeToInsert=mainSkinDoc.importNode(baseStyleElement,true);if(initialMainStyleNode){let initialMainHeadNode=mainSkinDoc.querySelector("html>head");initialMainHeadNode.insertBefore(nodeToInsert,initialMainStyleNode)}})}resolve(mainSkinDoc)}catch(error){reject("Error in fetching mainSkinDoc: "+error)}}).catch(error=>{reject("Error in fetching mainSkinDoc: "+error)})})};var _getSkinBytes=function(objDoc){return new Promise(function(resolve,reject){try{objDoc=JSON.parse(JSON.stringify(objDoc));_jsonMapperSvg(objDoc,"AFPC");objDoc=_updateDefaultLayouts(objDoc);let skinLayoutName=objDoc?.preferences?.find(p=>p.docPreferenceTypeCD?.toUpperCase()=="ALYT");let defaultLayoutRule=_ruleBook?.DefaultLayoutRules;let supportedDocPreferences=defaultLayoutRule.filter(d=>d?.DocPreferenceTypeCD?.trim()?.toUpperCase()!=="ALYT").map(d=>d?.DocPreferenceTypeCD?.trim()?.toUpperCase());let functionalityNames=objDoc?.preferences?.filter(p=>supportedDocPreferences.includes(p.docPreferenceTypeCD?.toUpperCase()));let conditionDict=functionalityNames.reduce((d,item)=>{d[item.docPreferenceTypeCD]=item.value?.toUpperCase();return d},{});conditionDict[skinLayoutName.docPreferenceTypeCD]=skinLayoutName.value.toUpperCase();let skinLayout=_getSkinLayoutFromConditionAndSetPreferences(objDoc,"SkinLayout",conditionDict);if(skinLayout==null)skinLayout=_getSkinLayoutAndSetPreferences(objDoc,skinLayoutName?.value,"SkinLayout");let functionalityLayouts=[];functionalityNames.forEach(functionalityName=>{let layout=_getSkinLayoutAndSetPreferences(objDoc,functionalityName.value,"Functionality");if(layout!=null)functionalityLayouts.push(layout)});let mainSkinDoc=null;let counterObj={parentContainerCounter:-1,containerCounter:-1};let containerTagList=[];if(_list.length>0){let skinObj=_list.find(d=>d?.skinCD?.toUpperCase()===objDoc?.skinCD);if(typeof skinObj==="undefined")throw new Error("skinCD missing in setup");mainSkinDoc=skinObj?.mainSkinDoc.cloneNode(true)}var rootNode=mainSkinDoc.querySelector("html body div.document");if(rootNode!=null&&skinLayout?.DocumentClass!=null)rootNode.setAttribute("class",rootNode.getAttribute("class")+" "+skinLayout?.DocumentClass);rootNode?.setAttribute("class",rootNode.getAttribute("class")+" atomicjs");let headXmlNode=mainSkinDoc.querySelector("html>head");try{if(skinLayout?.ContainerLayout!=null){if(rootNode!=null){if(skinLayout.Operations!=null)_sectionOperations(mainSkinDoc,skinLayout.Operations);let sectionText=rootNode.innerHTML;rootNode.innerHTML="";let documentContainerTag={Index:-1,ParentIndex:-1,ChildContainers:[]};containerTagList.push(documentContainerTag);skinLayout.ContainerLayout.forEach(container=>{_processContainerNode(container,rootNode,counterObj,documentContainerTag,"*")});let firstSectionContainerNode=mainSkinDoc.querySelector("html body div[id^='CONTAINER_']:not([id^='CONTAINER_PARENT_'])");firstSectionContainerNode.innerHTML=sectionText}}}catch(error){console.error("Error in skinlayout parsing: "+error);reject("Error in skinlayout parsing")}try{functionalityLayouts?.forEach(functionalityLayout=>{rootNode=mainSkinDoc.querySelector("html body div.document");if(rootNode!=null&&functionalityLayout?.DocumentClass!=null)rootNode.setAttribute("class",rootNode.getAttribute("class")+" "+functionalityLayout?.DocumentClass)});let newCounterObj={parentContainerIndex:-1,containerIndex:-1};_updateContainerIndexes(containerTagList[0]?.ChildContainers,mainSkinDoc,newCounterObj);let conainterNodes=mainSkinDoc.querySelectorAll("div[id^='CONTAINER_']");conainterNodes.forEach(containerNode=>{containerNode.setAttribute("id",containerNode.getAttribute("id").replace("TEMP_",""))});_updateCloneSectionTagsIndex(headXmlNode,containerTagList);_insertChildContainerTags(containerTagList[0]?.ChildContainers,headXmlNode);_insertParentIndexForContainerIndexes(mainSkinDoc);if(objDoc.sections){objDoc.sections.forEach(section=>{if(section.preferences){section.preferences.forEach(sectionPref=>{let sectionNode=mainSkinDoc.querySelector("html body div[id^='SECTION_"+(section.sectionTypeCD?section.sectionTypeCD.toUpperCase():"")+"']");if(sectionNode&&sectionNode.nodeType===Node.ELEMENT_NODE){if(sectionPref.TypeCD==="SCLS"){let currentClass=sectionNode.getAttribute("class")||"";sectionNode.setAttribute("class",currentClass+" "+sectionPref.Value)}else if(sectionPref.TypeCD==="ILNI"){let currentStyle=sectionNode.getAttribute("style")||"";let newStyle=currentStyle.trim()?currentStyle+";"+sectionPref.Value:sectionPref.Value;sectionNode.setAttribute("style",newStyle)}}})}})}let stylenodes=mainSkinDoc.querySelectorAll("style");let staticStyleNode=mainSkinDoc.querySelector("html head").ownerDocument.createElement("style");staticStyleNode.setAttribute("id","static");staticStyleNode.setAttribute("type","text/css");let dynamicStyleNode=mainSkinDoc.querySelector("html head").ownerDocument.createElement("style");dynamicStyleNode.setAttribute("id","dynamic");dynamicStyleNode.setAttribute("type","text/css");if(stylenodes!=null){stylenodes.forEach(style=>{if(style.getAttribute("id")==="static"){staticStyleNode.innerHTML+=style.innerHTML}else if(style.getAttribute("id")==="dynamic"){dynamicStyleNode.innerHTML+=style.innerHTML}style.parentNode.removeChild(style)});mainSkinDoc.querySelector("html head").appendChild(staticStyleNode);mainSkinDoc.querySelector("html head").appendChild(dynamicStyleNode)}_preferenceSvgMapper(objDoc,"AFPC",mainSkinDoc)}catch(error){console.error("Error in functionality parsing: "+error);reject("Error in functionality parsing")}if(mainSkinDoc.documentElement.outerHTML){let serializer=new XMLSerializer;let xmlStringSerialized=serializer.serializeToString(mainSkinDoc);resolve(btoa(unescape(encodeURI(_unescapeSpecialCharacters(xmlStringSerialized)))))}else reject("Error in getskinbytes")}catch(err){console.error("Error in getskinbytes: "+err);reject("Error in getskinbytes")}})};var _unescapeSpecialCharacters=function(str){return str.replace(/&amp;gt;/g,">").replace(/&amp;lt;/g,"<").replace(/&amp;amp;/g,"&").replace(/&amp;quot;/g,'"').replace(/&amp;apos;/g,"'").replace(/&amp;nbsp;/g," ").replace(/&gt;/g,">").replace(/&lt;/g,"<").replace(/&amp;/g,"&").replace(/&quot;/g,'"').replace(/&apos;/g,"'").replace(/&#39;/g,"'").replace(/&copy;/g,"©").replace(/&reg;/g,"®").replace(/&euro;/g,"€").replace(/&pound;/g,"£").replace(/&yen;/g,"¥").replace(/&rarr;/g,"→").replace(/&plusmn;/g,"±").replace(/&times;/g,"×").replace(/&divide;/g,"÷")};var _processContainerNode=function(container,rootNode,counterObj,parentContainer,starValue){if(container){let id="";if(container.Type.toUpperCase()=="PARENT")id="CONTAINER_PARENT_"+ ++counterObj.parentContainerCounter;else{id="CONTAINER_"+ ++counterObj.containerCounter}let containerNode=rootNode.ownerDocument.createElement("div");containerNode.setAttribute("id",id);let containerClassAttr="flex-container "+(container.Classes!=undefined?container.Classes:"");containerNode.setAttribute("class",containerClassAttr);rootNode.appendChild(containerNode);if(container.Preferences){container.Preferences.forEach(containerPref=>{if(containerPref.TypeCD?.toUpperCase()=="ILNI")containerNode.setAttribute("style",containerPref.Value!=undefined?containerPref.Value:"")})}let currentContainerTag={Class:containerClassAttr,ChildContainers:[]};if(container.Type?.toUpperCase()=="SECTION"){currentContainerTag.Index=counterObj.containerCounter;if(container.ColumnType)currentContainerTag.ColumnType=container.ColumnType;if(container.DefaultSections==="*")currentContainerTag.Value=starValue;else currentContainerTag.Value=container.DefaultSections}else currentContainerTag.ParentIndex=counterObj.parentContainerCounter;parentContainer.ChildContainers.push(currentContainerTag);if(container.Containers&&container.Containers.length){container.Containers.forEach(childContainer=>{_processContainerNode(childContainer,containerNode,counterObj,currentContainerTag,starValue)})}}};var _getSkinLayoutAndSetPreferences=function(objDoc,functionalityName,layoutType){try{let functionalityLayout=_getAtomicSkinsLayout(objDoc,functionalityName,layoutType);let sectionPreferences=functionalityLayout?.SectionPreferences;if(sectionPreferences==null){let rulebook=JSON.parse(JSON.stringify(_ruleBook));let skinRule=rulebook?.SkinRules?.find(r=>r.SkinCD?.toUpperCase()===objDoc.skinCD?.toUpperCase());if(skinRule!=null)sectionPreferences=skinRule.Layouts?.find(l=>l.Name?.toUpperCase()==="DEFAULT"&&l.LayoutType?.toUpperCase()===layoutType?.toUpperCase())?.SectionPreferences}if(sectionPreferences!=null){sectionPreferences.forEach(sectionPreference=>{let section=objDoc.sections?.find(s=>s.sectionTypeCD?.toUpperCase()===sectionPreference.SectionTypeCD?.toUpperCase());if(section!=null){sectionPreference.Preferences.forEach(preference=>{if(section.preferences==null)section.preferences=[];let currentPref=section.preferences?.find(p=>p.TypeCD?.toUpperCase()===preference.TypeCD?.toUpperCase());preference.Value=replaceDynamicFormula(preference.Value,objDoc.skinCD,_ruleBook);if(currentPref==null)section.preferences.push(preference);else currentPref.Value=preference.Value})}})}return functionalityLayout}catch(error){throw new Error("Error in fecthing layout and setting prefernces: "+functionalityName)}};var _getSkinLayoutFromConditionAndSetPreferences=function(objDoc,layoutType,conditionVariables){try{let functionalityLayout=_getAtomicSkinsLayoutFromCondition(objDoc,layoutType,conditionVariables);let sectionPreferences=functionalityLayout?.SectionPreferences;if(sectionPreferences==null){let ruleBook=JSON.parse(JSON.stringify(_ruleBook));let skinRule=ruleBook?.SkinRules?.find(r=>r.SkinCD?.toUpperCase()===objDoc.skinCD?.toUpperCase());if(skinRule!=null)sectionPreferences=skinRule.Layouts?.find(l=>l.Name?.toUpperCase()==="DEFAULT"&&l.LayoutType?.toUpperCase()===layoutType?.toUpperCase())?.SectionPreferences}if(sectionPreferences!=null){sectionPreferences.forEach(sectionPreference=>{let section=objDoc.sections?.find(s=>s.sectionTypeCD?.toUpperCase()===sectionPreference.SectionTypeCD?.toUpperCase());if(section!=null){sectionPreference.Preferences.forEach(preference=>{if(section.preferences==null)section.preferences=[];let currentPref=section.preferences?.find(p=>p.TypeCD?.toUpperCase()===preference.TypeCD?.toUpperCase());preference.Value=replaceDynamicFormula(preference.Value,objDoc.skinCD,_ruleBook);if(currentPref==null)section.preferences.push(preference);else currentPref.Value=preference.Value})}})}return functionalityLayout}catch(error){throw new Error("Error in fecthing layout and setting prefernces: "+functionalityName)}};function simplifyFormula(skinCD,rulebook){try{const skinRule=rulebook?.SkinRules?.find(r=>r.SkinCD.toUpperCase()===skinCD?.toUpperCase());if(skinRule.Formula){if(skinRule.Formula?.PGSZ){skinRule.Formula.PGSZ=retrieveDocDimension(skinRule.Formula.PGSZ)}const updates={};for(const[key,value]of Object.entries(skinRule.Formula)){let newValue=value.toString();let previousValue="";do{previousValue=newValue;for(const[innerKey,innerValue]of Object.entries(skinRule.Formula)){const placeholder=`{$${innerKey}}`;newValue=newValue.toString().replace(placeholder.toString(),innerValue.toString())}}while(newValue!==previousValue);updates[key]=evaluateNumericExpression(newValue)}for(const[key,value]of Object.entries(updates)){skinRule.Formula[key]=value}}}catch(er){console.log("error : "+er.message)}}function replaceDynamicFormula(input,skinCD,rulebook){const skinRule=rulebook?.SkinRules?.find(r=>r.SkinCD.toUpperCase()===skinCD?.toUpperCase());if(skinRule?.Formula){for(const[key,value]of Object.entries(skinRule.Formula)){const placeholder=`{$${key}}`;input=input.replace(placeholder,value)}}return input}function evaluateNumericExpression(expression){try{const isNumericExpression=/^[\d+\-*/().\s]+$/.test(expression);if(isNumericExpression){const result=new Function("return "+expression)();return result.toString()}else{return expression}}catch{return expression}}function retrieveDocDimension(paperSize){let docWidth;let docHeight;switch(paperSize){case"A5":docWidth=420;docHeight=595;break;case"A4":docWidth=595;docHeight=842;break;case"A3":docWidth=842;docHeight=1191;break;case"Legal":docWidth=612;docHeight=1008;break;default:docWidth=612;docHeight=792;break}return docWidth}var _getAtomicSkinsLayout=function(objDoc,functionalityName,layoutType){try{let functionalityLayout=null;let ruleBook=JSON.parse(JSON.stringify(_ruleBook));let skinRule=ruleBook?.SkinRules?.find(r=>r.SkinCD?.toUpperCase()===objDoc.skinCD?.toUpperCase());if(skinRule!=null){if(functionalityName){functionalityLayout=skinRule.Layouts?.find(f=>f.Name?.toUpperCase()===functionalityName.toUpperCase()&&f.LayoutType==layoutType)}if(functionalityLayout==null)functionalityLayout=skinRule.Layouts?.find(l=>l.Name?.toUpperCase()==="DEFAULT"&&l?.LayoutType?.toUpperCase()==layoutType?.toUpperCase())}return functionalityLayout}catch(error){throw new Error("Error in fecthing layout: "+functionalityName)}};var _getAtomicSkinsLayoutFromCondition=function(objDoc,layoutType,conditionVariables){try{let skinLayout=null;let skinRule=_ruleBook?.SkinRules?.find(r=>r.SkinCD?.toUpperCase()===objDoc.skinCD?.toUpperCase());if(skinRule!=null){let skinLayouts=skinRule.Layouts?.filter(f=>f?.LayoutType?.toUpperCase()==layoutType?.toUpperCase());if(skinLayouts){skinLayouts.forEach(layout=>{if(layout.Condition!=undefined||layout.Condition!=null){const replacedCondition=_replaceConditionVariables(layout.Condition,conditionVariables);let result=Boolean(eval(replacedCondition));if(result)skinLayout=layout}})}}return skinLayout}catch(error){throw new Error("Error in fecthing Condition skinlayout")}};var _getAtomicSkinsRuleBook=function(atomicSkinList){_ruleBook.SkinRules=[];return new Promise(function(resolve,reject){let promises=atomicSkinList.map(skin=>{return _fetchData(_baseUrl+"AtomicSkins/SkinRules/"+skin+".json").then(result=>{if(result){_ruleBook.SkinRules.push(result);simplifyFormula(skin,_ruleBook)}else{console.error("Error in fetching "+skin+" rule")}}).catch(error=>{console.error("Error in fetching "+skin+" rule")})});promises.push(_fetchData(_baseUrl+"AtomicSkins/SkinRules/DefaultLayoutRules.json").then(result=>{if(result){_ruleBook.DefaultLayoutRules=result}else{console.error("Error in fetching DefaultLayoutRules rule")}}).catch(error=>{console.error("Error in fetching DefaultLayoutRules rule")}));Promise.all(promises).then(()=>{if(_ruleBook.SkinRules.length>0&&_ruleBook.DefaultLayoutRules){resolve(true)}else{reject("Error in fetching ruleBook")}}).catch(()=>{reject("Error in fetching ruleBook")})})};var _getContainerIndexForSection=function(containerTags,sectionTypeCd,containerIndex){for(let i=0;i<containerTags.length;i++){let containerTag=containerTags[i];if(containerTag.Index>-1){if(containerTag.Value.includes(sectionTypeCd)){containerIndex=containerTag.Index;break}else if(containerTag.Value==="*"&&containerIndex<0){containerIndex=containerTag.Index}}else{containerIndex=_getContainerIndexForSection(containerTag.ChildContainers,sectionTypeCd,containerIndex)}}return containerIndex};var _getContainerTagForIndex=function(containerTags,containerIndex){let selectedContainerTag=null;for(let i=0;i<containerTags.length;i++){let containerTag=containerTags[i];if(containerTag.Index==containerIndex){selectedContainerTag=containerTag;break}if(containerTag.ChildContainers&&containerTag.ChildContainers.length>0){selectedContainerTag=_getContainerTagForIndex(containerTag.ChildContainers,containerIndex);if(selectedContainerTag!=null){break}}}return selectedContainerTag};var _filterRemainingSections=function(remainingSections,containerLayout){containerLayout?.forEach(container=>{if(container.Type.toUpperCase()==="SECTION"){let defaultSections=container.DefaultSections.split(",");defaultSections?.forEach(sectionToRemove=>{remainingSections=remainingSections.filter(item=>item!==sectionToRemove)})}else if(container.Containers&&container.Containers.length>0){remainingSections=_filterRemainingSections(remainingSections,container.Containers)}});return remainingSections};var _updateContainerIndexes=function(containerTags,mainSkinDoc,counterObj){containerTags.forEach(containerTag=>{if(containerTag.Index>-1){var containerNode=mainSkinDoc.querySelector(`div[id*='CONTAINER_${containerTag.Index}']`);containerNode.setAttribute("id","CONTAINER_TEMP_"+(++counterObj.containerIndex).toString());containerTag.Index=counterObj.containerIndex}else{var containerNode=mainSkinDoc.querySelector(`div[id*='CONTAINER_PARENT_${containerTag.ParentIndex}']`);containerNode.setAttribute("id","CONTAINER_PARENT_TEMP_"+(++counterObj.parentContainerIndex).toString());containerTag.ParentIndex=counterObj.parentContainerIndex;if(containerTag.ChildContainers&&containerTag.ChildContainers.length>0){_updateContainerIndexes(containerTag.ChildContainers,mainSkinDoc,counterObj)}}})};var _insertChildContainerTags=function(childContainers,currentParent){childContainers.forEach(containerTag=>{var containerIndexNode=currentParent.ownerDocument.createElement("container");containerIndexNode.setAttribute("class",containerTag.Class);if(currentParent.Name=="head")currentParent.insertBefore(containerIndexNode,currentParent.querySelector("style"));else currentParent.appendChild(containerIndexNode);if(containerTag.ParentIndex>-1){containerIndexNode.setAttribute("parentindex",containerTag.ParentIndex.toString());if(containerTag?.ChildContainers!=null)_insertChildContainerTags(containerTag.ChildContainers,containerIndexNode)}else if(containerTag.Index>-1){containerIndexNode.setAttribute("index",containerTag.Index.toString());containerIndexNode.setAttribute("value",containerTag.Value);if(containerTag.ColumnType)containerIndexNode.setAttribute("columntype",containerTag.ColumnType)}})};var _insertParentIndexForContainerIndexes=function(mainSkinDoc){var containerTags=mainSkinDoc.querySelectorAll("container");containerTags?.forEach(containerTag=>{if(containerTag.hasAttribute("index")){if(containerTag.parentNode.hasAttribute("parentindex")){let parentIndex=containerTag.parentNode.getAttribute("parentindex");containerTag.setAttribute("parentindex",parentIndex)}}})};var _jsonMapperSvg=function(objDoc,prefTypeCd){let afpcValue=objDoc?.preferences?.find(p=>p.docPreferenceTypeCD?.toUpperCase()==prefTypeCd.toUpperCase())?.value;let skinRule=_ruleBook?.SkinRules?.find(r=>r.SkinCD?.toUpperCase()===objDoc.skinCD?.toUpperCase());if(skinRule?.MonoLayout!=null){let monoLayout=skinRule?.MonoLayout?.find(layout=>layout.DocPreferenceTypeCD?.toUpperCase()===prefTypeCd.toUpperCase());if(monoLayout?.Regex!=null){monoLayout.Regex.forEach(reg=>{let regex=new RegExp(reg);let values=regex.exec(afpcValue);if(values&&values.length>2){monoLayout.Replace=values[1];monoLayout.BlobURLsMatchCondition=values[3];var preference=objDoc?.preferences?.find(r=>r.docPreferenceTypeCD.toUpperCase()===prefTypeCd.toUpperCase());if(preference){preference.value=monoLayout.Replace}}})}else{var preference=doc.preferences.find(r=>r.docPreferenceTypeCD==preftypecd);if(preference?.value?.includes("-")){preference.value=preference.value.split("-")[0]}}}};var _preferenceSvgMapper=function(objDoc,prefTypeCd,mainSkinDoc){let skinRule=_ruleBook?.SkinRules?.find(r=>r.SkinCD?.toUpperCase()===objDoc.skinCD?.toUpperCase());let monoLayout=skinRule?.MonoLayout?.find(layout=>layout?.DocPreferenceTypeCD?.toUpperCase()===prefTypeCd.toUpperCase());if(scope.allSVGs&&scope.allSVGs.length>0){let svgObj=scope.allSVGs.find(svgList=>svgList.SkinCD?.toUpperCase()==objDoc.skinCD?.toUpperCase());if(svgObj){if(svgObj.SvgList&&svgObj.SvgList.length>0){let svgElement=svgObj.SvgList.find(svg=>svg.getAttribute("data-id")?.toUpperCase()===monoLayout?.BlobURLsMatchCondition?.toUpperCase());if(svgElement==null){let defaultMonogram=monoLayout?.SupportedMonograms?.find(s=>s.Default);svgElement=svgObj.SvgList.find(svg=>svg.getAttribute("data-id")?.toUpperCase()===defaultMonogram?.Name?.toUpperCase())}if(svgElement){svgElement=svgElement.cloneNode(true);let monogramDiv=mainSkinDoc.querySelector("div.monogram");if(monogramDiv){let svgStyle=svgElement.querySelector("style");if(svgStyle){let styleContent=svgStyle.innerHTML;let existingDynamicStyle=mainSkinDoc.querySelector("#dynamic");if(existingDynamicStyle){const skinClassPrefix=`.skn-${objDoc.skinCD.toLowerCase()} .monogram`;let lines=styleContent.split("\n").filter(line=>line.trim()!=="");let updatedLines=lines.map(line=>line.length>4?`${skinClassPrefix} ${line.trim()}`:line.trim());let updatedStyleContent=updatedLines.join("\n");existingDynamicStyle.innerHTML+=`\n${updatedStyleContent}`;svgElement.removeChild(svgStyle)}}while(monogramDiv.hasChildNodes()){monogramDiv.removeChild(monogramDiv.lastChild)}const importedSvg=mainSkinDoc.importNode(svgElement,true);monogramDiv.appendChild(importedSvg)}let mono=monoLayout?.SupportedMonograms.find(s=>s?.Name?.toUpperCase()==monoLayout?.BlobURLsMatchCondition?.toUpperCase());if(mono!=null&&monogramDiv!=null&&mono.MonogramClass)monogramDiv.setAttribute("class",monogramDiv.getAttribute("class")+" "+mono.MonogramClass)}}}}};var _getContainerTagParent=function(containerTags,currentContainerTag){for(let i=0;i<containerTags.length;i++){let containerTag=containerTags[i];if(containerTag.ChildContainers?.includes(currentContainerTag)){containerTagParent=containerTag;break}else if(containerTag.ChildContainers!=null){containerTagParent=_getContainerTagParent(containerTag.ChildContainers,currentContainerTag);if(containerTagParent!=null)break}}return containerTagParent};var _sectionOperations=function(rootNode,operations){if(operations!=null){operations.forEach(operation=>{var section=rootNode.querySelector(`html body div[id='${operation.SectionId?.toUpperCase()}']`);if(operation?.Action?.toUpperCase()==="DISCARDSECTION"){if(section!=null&&section.parentNode!=null)section.parentNode.removeChild(section)}else if(operation?.Action?.toUpperCase()==="RENAMESECTION"){if(section!=null&&operation.NewSectionId!=null)section.setAttribute("id",operation.NewSectionId)}else if(operation?.Action?.toUpperCase()==="REMOVETAG"){let TagToBeRemoved=rootNode.querySelector(`html head ${operation.TagName.toLowerCase()}`);if(TagToBeRemoved!=null&&TagToBeRemoved.parentNode!=null)TagToBeRemoved.parentNode.removeChild(TagToBeRemoved)}})}};var _updateCloneSectionTagsIndex=function(headXmlNode,containerTagList){let cloneSections=headXmlNode.querySelectorAll("clonesection");if(cloneSections!=null){cloneSections.forEach(tag=>{let sectionTypeCD=tag.getAttribute("name");let clonedContainerIndex=_getContainerIndexForSection(containerTagList,sectionTypeCD,-1);tag.setAttribute("containerindex",clonedContainerIndex)})}};var _getAtomicBaseSkinBytes=function(parser){return new Promise(function(resolve,reject){_fetchDataText(_baseUrl+"AtomicSkins/ATMC_Base.htm").then(result=>{if(result){let parsedSkinBytes=parser.parseFromString(result,"application/xml");resolve(parsedSkinBytes)}else{reject("Error in fetching base skinbytes")}}).catch(error=>{console.error("Error in fetching base skinbytes: ",error);reject("Error in fetching base skinbytes")})})};var _getAtomicSkinBytes=function(skinCD){if(skinCD)return new Promise(function(resolve,reject){_fetchDataText(_baseUrl+"AtomicSkins/ATMC_"+skinCD+".htm").then(result=>{if(result){resolve(result)}else{reject("Error in fetching skinbytes: "+skinCD)}}).catch(error=>{console.error("Error in fetching skinbytes: "+skinCD,error);reject("Error in fetching skinbytes: "+skinCD)})})};var _updateDefaultLayouts=function(objDoc){if(objDoc.preferences==null)objDoc.preferences=[];let skinLayoutName=objDoc?.preferences?.find(p=>p.docPreferenceTypeCD?.toUpperCase()=="ALYT")?.value;let defaultLayoutRule=_ruleBook?.DefaultLayoutRules;let supportedDocPreferences=defaultLayoutRule.filter(d=>d?.DocPreferenceTypeCD?.trim()?.toUpperCase()!=="ALYT").map(d=>d?.DocPreferenceTypeCD?.trim()?.toUpperCase());let functionalityNames=objDoc?.preferences?.filter(p=>supportedDocPreferences.includes(p.docPreferenceTypeCD?.toUpperCase()));if(functionalityNames.length==0)console.warn("Functionality preferences are missing");let skinRule=_ruleBook?.SkinRules?.find(r=>r.SkinCD?.toUpperCase()===objDoc.skinCD?.toUpperCase());let skinDefaultLayout=skinRule?.SkinDefaultLayouts;if(typeof skinLayoutName==="undefined"||!defaultLayoutRule?.find(d=>d.DocPreferenceTypeCD?.toUpperCase()=="ALYT")?.Options?.includes(skinLayoutName)){console.warn("ALYT preference is invalid or missing");let defaultValue=skinDefaultLayout?.find(p=>p.DocPreferenceTypeCD?.toUpperCase()=="ALYT")?.Default;if(typeof defaultValue==="undefined"){defaultValue=defaultLayoutRule?.find(p=>p.DocPreferenceTypeCD?.toUpperCase()=="ALYT")?.Default}if(defaultValue){objDoc.preferences=objDoc.preferences.filter(p=>p.docPreferenceTypeCD?.toUpperCase()!="ALYT");let skinsLayoutPref={docPreferenceTypeCD:"ALYT",value:defaultValue};objDoc.preferences.push(skinsLayoutPref)}}if(objDoc?.preferences){objDoc.preferences=objDoc.preferences.filter(p=>!supportedDocPreferences.includes(p.docPreferenceTypeCD?.toUpperCase()))}let pictFunctionalityOptions=defaultLayoutRule?.find(d=>d?.DocPreferenceTypeCD?.toUpperCase()==="AFPC")?.Options;let AFNCPICT=functionalityNames.find(f=>pictFunctionalityOptions.some(e=>e.toUpperCase()==f?.value?.toUpperCase()));objDoc=_updateDefaultFunctionalityLayout(objDoc,AFNCPICT,"AFPC",skinDefaultLayout,defaultLayoutRule);let skillFunctionalityOptions=defaultLayoutRule?.find(d=>d?.DocPreferenceTypeCD?.toUpperCase()==="AFSK")?.Options;let AFNCSKLI=functionalityNames.find(f=>skillFunctionalityOptions.some(e=>e.toUpperCase()==f?.value?.toUpperCase()));objDoc=_updateDefaultFunctionalityLayout(objDoc,AFNCSKLI,"AFSK",skinDefaultLayout,defaultLayoutRule);let lnggFunctionalityOptions=defaultLayoutRule?.find(d=>d?.DocPreferenceTypeCD?.toUpperCase()==="AFLN")?.Options;let AFNCLNGG=functionalityNames.find(f=>lnggFunctionalityOptions.some(e=>e.toUpperCase()==f?.value?.toUpperCase()));objDoc=_updateDefaultFunctionalityLayout(objDoc,AFNCLNGG,"AFLN",skinDefaultLayout,defaultLayoutRule);let sftrFunctionalityOptions=defaultLayoutRule?.find(d=>d?.DocPreferenceTypeCD?.toUpperCase()==="AFSF")?.Options;let AFNCSFTR=functionalityNames.find(f=>sftrFunctionalityOptions.some(e=>e.toUpperCase()==f?.value?.toUpperCase()));objDoc=_updateDefaultFunctionalityLayout(objDoc,AFNCSFTR,"AFSF",skinDefaultLayout,defaultLayoutRule);return objDoc};var _updateDefaultFunctionalityLayout=function(objDoc,afnc,functionalityTypeCD,skinDefaultLayout,defaultLayoutRule){if(afnc==null){if(typeof afnc==="undefined"){let defaultValue=skinDefaultLayout?.find(p=>p.DocPreferenceTypeCD?.toUpperCase()==functionalityTypeCD.toUpperCase())?.Default;if(typeof defaultValue==="undefined"){defaultValue=defaultLayoutRule?.find(p=>p.DocPreferenceTypeCD?.toUpperCase()==functionalityTypeCD.toUpperCase())?.Default}if(defaultValue){let layoutPref={docPreferenceTypeCD:functionalityTypeCD.toUpperCase(),value:defaultValue};objDoc.preferences.push(layoutPref)}}}else{let layoutPref={docPreferenceTypeCD:functionalityTypeCD.toUpperCase(),value:afnc?.value};objDoc.preferences.push(layoutPref)}return objDoc};var _fetchData=function(url){return fetch(url).then(response=>{if(!response.ok){throw new Error("Network error: "+response.statusText)}return response.json()}).then(text=>{return text}).catch(error=>{console.error(error)})};var _fetchDataText=function(url){return fetch(url).then(response=>{if(!response.ok){throw new Error("Network error: "+response.statusText)}return response.text()}).then(text=>{return text}).catch(error=>{console.error(error)})};var _replaceConditionVariables=function(condition,variables){for(const[key,value]of Object.entries(variables)){const regex=new RegExp(`\\b${key}\\b`,"g");condition=condition.replace(regex,`'${value}'`)}return condition};var _getAtomicMonogramSvgs=function(atomicSkinList){return new Promise(function(resolve,reject){_fetchDataText(_baseUrl+_masterSVGUrl).then(masterSVGList=>{if(masterSVGList){_ruleBook?.SkinRules?.forEach(skinRule=>{if(atomicSkinList.includes(skinRule?.SkinCD)){skinRule?.MonoLayout?.forEach(monoLayout=>{if(monoLayout?.DocPreferenceTypeCD?.toUpperCase()==="AFPC"){let svgDoc=_parser.parseFromString(masterSVGList,"image/svg+xml");if(svgDoc){if(monoLayout?.SupportedMonograms){let svgObj={SkinCD:skinRule.SkinCD,SvgList:[]};monoLayout?.SupportedMonograms.forEach(supportedMonogram=>{let svgName=supportedMonogram?.Name?.split("-")[0];if(svgName){let svgElement=svgDoc.querySelector(`svg[data-id*="${svgName}"]`);if(svgElement){svgElement=svgElement.cloneNode(true);let dataId=supportedMonogram?.Name;svgElement.setAttribute("data-id",dataId);let svgStyle=svgElement.querySelector("style");if(svgStyle){let styleContent=svgStyle.innerHTML;if(supportedMonogram?.ColorParams){Object.entries(supportedMonogram.ColorParams).forEach(([key,value])=>{if(key&&value!==undefined){let colorKey=`{${key}}`;let colorVal=value;if(styleContent&&styleContent.includes(colorKey)){styleContent=styleContent.replaceAll(colorKey,colorVal)}}});let dataIdSelector=` svg[data-id="${dataId}"] `;styleContent=styleContent.split("\n").map(rule=>{if(rule.trim()){return`${dataIdSelector} ${rule.trim()}`}return""}).filter(Boolean).join("\n");svgStyle.innerHTML=styleContent}}}svgObj.SvgList.push(svgElement)}});scope.allSVGs.push(svgObj)}}}})}});resolve("success")}}).catch(err=>{console.log("Error in fetching master SVGs "+err);reject(err)})})};scope.getSkinBytes=function(document){return new Promise(function(resolve,reject){let skinBytes=_getSkinBytes(document);skinBytes.then(bytes=>{if(bytes)resolve(bytes);else reject("Error while fetching skinBytes")}).catch(err=>{reject(err)})})};scope.setup=function(baseUrl,atomicSkinList){if(_initialSetupDone){return Promise.resolve("Already setup done")}return new Promise(function(resolve,reject){try{if(typeof baseUrl!=="undefined"){_baseUrl=baseUrl}if(typeof atomicSkinList==="undefined"){atomicSkinList=["CBG1","TML4","MLC1","MLM3","UPT2","HRT1","SRZ1","SRZ2","SRZ3","SRZ4","SRZ5","SRZ6"]}if(typeof _ruleBook==="undefined"){_ruleBook={};_getAtomicSkinsRuleBook(atomicSkinList).then(isRuleBookGenerated=>{if(isRuleBookGenerated){_getAtomicMonogramSvgs(atomicSkinList).then(response=>{if(response){if(typeof _baseSkinDoc==="undefined"){_getAtomicBaseSkinBytes(_parser).then(baseSkinBytes=>{if(baseSkinBytes){_baseSkinDoc=baseSkinBytes;let parsedAtomicskins=0;for(let i=0;i<atomicSkinList.length;i++){_getMainSkinDocXmlNode(_parser,atomicSkinList[i]).then(mainSkinDoc=>{if(mainSkinDoc){let skinObj={skinCD:atomicSkinList[i],mainSkinDoc:mainSkinDoc};_list.push(skinObj)}parsedAtomicskins++;if(parsedAtomicskins===atomicSkinList.length){_initialSetupDone=true;resolve("Setup Done")}}).catch(error=>{parsedAtomicskins++;if(parsedAtomicskins===atomicSkinList.length){_initialSetupDone=true;resolve("Setup Done")}})}}else reject("Error while accessing baseSkin")}).catch(error=>{throw error})}}})}else reject("Error while accessing rulebook")}).catch(error=>{throw error}).catch(error=>{throw error})}}catch(error){console.error("Setup encountered an error:",error);reject("Setup encountered an error")}})};return scope}(ATMC.SKIN||{});